// gridbot.gridc

// Objective: maximise resources per turn
// Strategy:
//   consume resources
//   punch any enemies
//   look for best location to move to

int dirtable[4];
int movetable[256];

void init()
{
  dirtable[0] = @NORTH;
  dirtable[1] = @EAST;
  dirtable[2] = @WEST;
  dirtable[3] = @SOUTH;

  // bits: n, ne, e, se, s, sw, w, nw
  movetable[0] = 0;
  movetable[1] = @NORTH;
  movetable[2] = @WEST;
  movetable[3] = @WEST;
  movetable[4] = @WEST;
  movetable[5] = @WEST;
  movetable[6] = @WEST;
  movetable[7] = @WEST;
  movetable[8] = @SOUTH;
  movetable[9] = @NORTH;
  movetable[10] = @WEST;
  movetable[11] = @WEST;
  movetable[12] = @SOUTH;
  movetable[13] = @WEST;
  movetable[14] = @WEST;
  movetable[15] = @WEST;
  movetable[16] = @EAST;
  movetable[17] = @NORTH;
  movetable[18] = @EAST;
  movetable[19] = @WEST;
  movetable[20] = @SOUTH;
  movetable[21] = @WEST;
  movetable[22] = @WEST;
  movetable[23] = @WEST;
  movetable[24] = @SOUTH;
  movetable[25] = @SOUTH;
  movetable[26] = @SOUTH;
  movetable[27] = @WEST;
  movetable[28] = @SOUTH;
  movetable[29] = @SOUTH;
  movetable[30] = @SOUTH;
  movetable[31] = @WEST;
  movetable[32] = @EAST;
  movetable[33] = @NORTH;
  movetable[34] = @EAST;
  movetable[35] = @WEST;
  movetable[36] = @EAST;
  movetable[37] = @WEST;
  movetable[38] = @WEST;
  movetable[39] = @WEST;
  movetable[40] = @EAST;
  movetable[41] = @NORTH;
  movetable[42] = @EAST;
  movetable[43] = @WEST;
  movetable[44] = @SOUTH;
  movetable[45] = @WEST;
  movetable[46] = @WEST;
  movetable[47] = @WEST;
  movetable[48] = @EAST;
  movetable[49] = @EAST;
  movetable[50] = @EAST;
  movetable[51] = @EAST;
  movetable[52] = @EAST;
  movetable[53] = @EAST;
  movetable[54] = @EAST;
  movetable[55] = @WEST;
  movetable[56] = @EAST;
  movetable[57] = @EAST;
  movetable[58] = @EAST;
  movetable[59] = @EAST;
  movetable[60] = @SOUTH;
  movetable[61] = @SOUTH;
  movetable[62] = @SOUTH;
  movetable[63] = @WEST;
  movetable[64] = @NORTH;
  movetable[65] = @NORTH;
  movetable[66] = @NORTH;
  movetable[67] = @NORTH;
  movetable[68] = @NORTH;
  movetable[69] = @NORTH;
  movetable[70] = @WEST;
  movetable[71] = @WEST;
  movetable[72] = @NORTH;
  movetable[73] = @NORTH;
  movetable[74] = @NORTH;
  movetable[75] = @NORTH;
  movetable[76] = @SOUTH;
  movetable[77] = @NORTH;
  movetable[78] = @WEST;
  movetable[79] = @WEST;
  movetable[80] = @EAST;
  movetable[81] = @NORTH;
  movetable[82] = @EAST;
  movetable[83] = @NORTH;
  movetable[84] = @EAST;
  movetable[85] = @NORTH;
  movetable[86] = @EAST;
  movetable[87] = @WEST;
  movetable[88] = @EAST;
  movetable[89] = @NORTH;
  movetable[90] = @EAST;
  movetable[91] = @NORTH;
  movetable[92] = @SOUTH;
  movetable[93] = @SOUTH;
  movetable[94] = @SOUTH;
  movetable[95] = @WEST;
  movetable[96] = @EAST;
  movetable[97] = @NORTH;
  movetable[98] = @EAST;
  movetable[99] = @NORTH;
  movetable[100] = @EAST;
  movetable[101] = @NORTH;
  movetable[102] = @EAST;
  movetable[103] = @WEST;
  movetable[104] = @EAST;
  movetable[105] = @NORTH;
  movetable[106] = @EAST;
  movetable[107] = @NORTH;
  movetable[108] = @EAST;
  movetable[109] = @NORTH;
  movetable[110] = @EAST;
  movetable[111] = @WEST;
  movetable[112] = @EAST;
  movetable[113] = @EAST;
  movetable[114] = @EAST;
  movetable[115] = @EAST;
  movetable[116] = @EAST;
  movetable[117] = @EAST;
  movetable[118] = @EAST;
  movetable[119] = @EAST;
  movetable[120] = @EAST;
  movetable[121] = @EAST;
  movetable[122] = @EAST;
  movetable[123] = @EAST;
  movetable[124] = @EAST;
  movetable[125] = @EAST;
  movetable[126] = @EAST;
  movetable[127] = @EAST;
  movetable[128] = @NORTH;
  movetable[129] = @NORTH;
  movetable[130] = @NORTH;
  movetable[131] = @NORTH;
  movetable[132] = @NORTH;
  movetable[133] = @NORTH;
  movetable[134] = @WEST;
  movetable[135] = @WEST;
  movetable[136] = @NORTH;
  movetable[137] = @NORTH;
  movetable[138] = @NORTH;
  movetable[139] = @NORTH;
  movetable[140] = @SOUTH;
  movetable[141] = @NORTH;
  movetable[142] = @WEST;
  movetable[143] = @WEST;
  movetable[144] = @NORTH;
  movetable[145] = @NORTH;
  movetable[146] = @NORTH;
  movetable[147] = @NORTH;
  movetable[148] = @SOUTH;
  movetable[149] = @NORTH;
  movetable[150] = @WEST;
  movetable[151] = @WEST;
  movetable[152] = @SOUTH;
  movetable[153] = @NORTH;
  movetable[154] = @SOUTH;
  movetable[155] = @NORTH;
  movetable[156] = @SOUTH;
  movetable[157] = @SOUTH;
  movetable[158] = @SOUTH;
  movetable[159] = @WEST;
  movetable[160] = @NORTH;
  movetable[161] = @NORTH;
  movetable[162] = @NORTH;
  movetable[163] = @NORTH;
  movetable[164] = @NORTH;
  movetable[165] = @NORTH;
  movetable[166] = @WEST;
  movetable[167] = @WEST;
  movetable[168] = @NORTH;
  movetable[169] = @NORTH;
  movetable[170] = @NORTH;
  movetable[171] = @NORTH;
  movetable[172] = @SOUTH;
  movetable[173] = @NORTH;
  movetable[174] = @WEST;
  movetable[175] = @WEST;
  movetable[176] = @EAST;
  movetable[177] = @NORTH;
  movetable[178] = @EAST;
  movetable[179] = @NORTH;
  movetable[180] = @EAST;
  movetable[181] = @NORTH;
  movetable[182] = @EAST;
  movetable[183] = @WEST;
  movetable[184] = @EAST;
  movetable[185] = @NORTH;
  movetable[186] = @EAST;
  movetable[187] = @NORTH;
  movetable[188] = @SOUTH;
  movetable[189] = @SOUTH;
  movetable[190] = @SOUTH;
  movetable[191] = @WEST;
  movetable[192] = @NORTH;
  movetable[193] = @NORTH;
  movetable[194] = @NORTH;
  movetable[195] = @NORTH;
  movetable[196] = @NORTH;
  movetable[197] = @NORTH;
  movetable[198] = @NORTH;
  movetable[199] = @NORTH;
  movetable[200] = @NORTH;
  movetable[201] = @NORTH;
  movetable[202] = @NORTH;
  movetable[203] = @NORTH;
  movetable[204] = @NORTH;
  movetable[205] = @NORTH;
  movetable[206] = @NORTH;
  movetable[207] = @NORTH;
  movetable[208] = @NORTH;
  movetable[209] = @NORTH;
  movetable[210] = @NORTH;
  movetable[211] = @NORTH;
  movetable[212] = @NORTH;
  movetable[213] = @NORTH;
  movetable[214] = @NORTH;
  movetable[215] = @NORTH;
  movetable[216] = @NORTH;
  movetable[217] = @NORTH;
  movetable[218] = @NORTH;
  movetable[219] = @NORTH;
  movetable[220] = @SOUTH;
  movetable[221] = @NORTH;
  movetable[222] = @SOUTH;
  movetable[223] = @NORTH;
  movetable[224] = @NORTH;
  movetable[225] = @NORTH;
  movetable[226] = @NORTH;
  movetable[227] = @NORTH;
  movetable[228] = @NORTH;
  movetable[229] = @NORTH;
  movetable[230] = @NORTH;
  movetable[231] = @NORTH;
  movetable[232] = @NORTH;
  movetable[233] = @NORTH;
  movetable[234] = @NORTH;
  movetable[235] = @NORTH;
  movetable[236] = @NORTH;
  movetable[237] = @NORTH;
  movetable[238] = @NORTH;
  movetable[239] = @NORTH;
  movetable[240] = @EAST;
  movetable[241] = @NORTH;
  movetable[242] = @EAST;
  movetable[243] = @NORTH;
  movetable[244] = @EAST;
  movetable[245] = @NORTH;
  movetable[246] = @EAST;
  movetable[247] = @NORTH;
  movetable[248] = @EAST;
  movetable[249] = @NORTH;
  movetable[250] = @EAST;
  movetable[251] = @NORTH;
  movetable[252] = @EAST;
  movetable[253] = @NORTH;
  movetable[254] = @EAST;
  movetable[255] = @NORTH;
}

int dopunch(dir)
{
  if (ffi(@LOOK, dir) != @CELL_ROBOT)
    return 0;
  return ffi(@PUNCH, dir);
}

int dopull(dir)
{
  if (ffi(@LOOK, dir) != @CELL_RESOURCE)
    return 0;
  return ffi(@PULL, dir);
}

int domove(dir)
{
  if (ffi(@LOOK, dir) != @CELL_EMPTY)
    return 0;
  return ffi(@MOVE, dir);
}

int moveindex()
{
  // bits: n, ne, e, se, s, sw, w, nw
  return (ffi(@SCAN,  0, -2) == @CELL_RESOURCE) * 128 +
         (ffi(@SCAN,  1, -1) == @CELL_RESOURCE) * 64 +
         (ffi(@SCAN,  2,  0) == @CELL_RESOURCE) * 32 +
         (ffi(@SCAN,  1,  1) == @CELL_RESOURCE) * 16 +
         (ffi(@SCAN,  0,  2) == @CELL_RESOURCE) * 8 +
         (ffi(@SCAN, -1,  1) == @CELL_RESOURCE) * 4 +
         (ffi(@SCAN, -2,  0) == @CELL_RESOURCE) * 2 +
         (ffi(@SCAN, -1, -1) == @CELL_RESOURCE);
}

int consume()
{
  if (dopull(@NORTH))
    return 1;
  if (dopull(@EAST))
    return 1;
  if (dopull(@SOUTH))
    return 1;
  if (dopull(@WEST))
    return 1;

  if (dopunch(@NORTH))
    return 1;
  if (dopunch(@EAST))
    return 1;
  if (dopunch(@SOUTH))
    return 1;
  if (dopunch(@WEST))
    return 1;
}

int act()
{
  if (consume())
    return 1;
  domove(movetable[moveindex()]);
}

int main()
{
  init();

  while (1)
  {
    act();
  }
}
